export ZSH=$HOME/.oh-my-zsh
export LC_ALL=en_US.UTF-8
export PATH="$PATH:$HOME/.local/bin"
export NPM_TOKEN=''
#export PATH=$HOME/bin:/usr/local/bin:$PATH

ZSH_THEME="simple"

plugins=(git fzf)
source $ZSH/oh-my-zsh.sh

set -o vi

# aliases
# git
alias gpr='git pull --rebase'
alias gbrd='git branch | grep -v "master\|development" | sed "s/^[ *]*//" | sed "s/^/git branch -D /" | bash'
alias gsp='git stash pop'
alias gs='git stash -u'
alias ga='git add'
alias gap='git add -p'
alias gc='git ci -m'
alias gmc='git merge --continue'
alias gp='ggpush'
alias grh='git reset HEAD'
alias glc='git rev-parse HEAD'
alias gdf='git diff'
alias gcia='git ci --amend'
alias gr='git rebase'
alias gri='git rebase -i'
alias grc='git rebase --continue'
alias gcb='gco $(gb | fzf)'
alias gnb='gco -b'
alias gcrb='git checkout $(gba | fzf | sed "s/.*\///")'

# tmux
alias t=tmux
alias ta='tmux attach -t'
alias tn='tmux new -s'

alias cl='clear'
alias myip='curl -4 ifconfig.co'

# docker
alias dsc='docker stop $(d ps -a -q)'
alias dkc='docker rm $(d ps -a -q)'
alias dpsf='docker ps --format "table {{.Names}}\t{{.Image}}\t{{.Command}}\t{{.Networks}}\t"'
alias dps='docker ps'
alias dpsa='docker ps -a'
alias dis="docker images --format '{{.Size}}\t{{.Repository}}:{{.Tag}}\t{{.ID}}' | sort -h | column -t"
alias de='docker exec -it'
alias dr='docker run -it'

# docker compose
alias dc=docker-compose
alias dcup='docker-compose up -d'
alias dce='docker-compose exec'
alias dcl='docker-compose log'

# remove docker images by name ilike
function dri() {
  docker rmi $(docker images --format "{{.Repository}}:{{.Tag}}" | grep $1) --force
}

# only for moteefe project
alias moteefe_bd='dc run -p 3000:3000 web bash'

alias a=asdf
alias ans=ansible

# vim & nvim
alias orvim=vim
alias nvim='~/.local/nvim/bin/nvim'
alias vim='nvim'
alias v=vim

# better cat
alias orcat=cat
alias cat=bat

# ruby & rails
alias bi='bundle install'
alias be='bundle exec'
alias brs='bundle exec rails s -b 0.0.0.0'
alias brsp='bundle exec rspec'
alias br='bundle exec rails'
alias brc='bundle exec rails c'
alias brdb='bundle exec rails db'
alias brdm='bundle exec rails db:migrate'
alias brgm='bundle exec rails g migration'

# node & npm
alias nr='npm run'
alias nrb='npm run build'

# elixir & mix
alias i='iex'
alias ips='iex -S mix phx.server'
alias ism='iex -S mix'
alias m='mix'
alias mab='mix archive.build'
alias mai='mix archive.install'
alias mat='mix app.tree'
alias mc='mix compile'
alias mcf='mix compile --force'
alias mcv='mix compile --verbose'
alias mcl='mix clean'
alias mca='mix do clean, deps.clean --all'
alias mco='mix coveralls'
alias mcoh='mix coveralls.html'
alias mdoc='mix docs'
alias mdl='mix dialyzer'
alias mdlp='mix dialyzer --plt'
alias mcr='mix credo'
alias mcrs='mix credo --strict'
alias mcx='mix compile.xref'
alias mdc='mix deps.compile'
alias mdg='mix deps.get'
alias mdgc='mix do deps.get, deps.compile'
alias mdu='mix deps.update'
alias mdt='mix deps.tree'
alias mdua='mix deps.update --all'
alias mdun='mix deps.unlock'
alias mduu='mix deps.unlock --unused'
alias meb='mix escript.build'
alias mec='mix ecto.create'
alias mecm='mix do ecto.create, ecto.migrate'
alias med='mix ecto.drop'
alias mem='mix ecto.migrate'
alias megm='mix ecto.gen.migration'
alias merb='mix ecto.rollback'
alias mers='mix ecto.reset'
alias mes='mix ecto.setup'
alias mge='mix gettext.extract'
alias mgem='mix gettext.extract --merge'
alias mgm='mix gettext.merge priv/gettext'
alias mho='mix hex.outdated'
alias mlh='mix local.hex'
alias mn='mix new'
alias mns='mix new --sup'
alias mpd='mix phx.digest'
alias mpgc='mix phx.gen.channel'
alias mpgh='mix phx.gen.html'
alias mpgj='mix phx.gen.json'
alias mpgm='mix phx.gen.model'
alias mpgs='mix phx.gen.secret'
alias mpn='mix phx.new'
alias mpr='mix phx.routes'
alias mps='mix phx.server'
alias mr='mix run'
alias mrnh='mix run --no-halt'
alias mrl='mix release'
alias mt='mix test'
alias mtc='mix test --cover'
alias mtf='mix test --failed'
alias mts='mix test --stale'
alias mtw='mix test.watch'
alias mx='mix xref'
alias mf='mix format'

# masos
alias start_fanctrl='/Applications/Macs\ Fan\ Control.app/Contents/MacOS/MacsFanControl /minimized & disown'
alias stop_fanctrl='kill_batch_of_ps MacsFanControl'
test -e "${HOME}/.iterm2_shell_integration.zsh" && source "${HOME}/.iterm2_shell_integration.zsh"


# Create a new directory and enter it
function mkd() {
  mkdir -p "$@" && cd "$_";
}

# Determine size of a file or total size of a directory
function fs() {
  if du -b /dev/null > /dev/null 2>&1; then
    local arg=-sbh;
  else
    local arg=-sh;
  fi
  if [[ -n "$@" ]]; then
    du $arg -- "$@";
  else
    du $arg .[^.]* ./*;
  fi;
}

bindkey '^n' expand-or-complete
bindkey '^p' reverse-menu-complete

DISABLE_AUTO_TITLE="true"

function kill_batch_of_ps() {
  ps aux | grep $1 | echo $1
  kill -9 $(ps aux | grep $1 | grep -v 'grep' | awk '{print $2}')
}

# asdf
. $HOME/.asdf/asdf.sh
. $HOME/.asdf/completions/asdf.bash

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

# changing themes by cmd
alias set_light_theme="
  cp ~/.fzf.zsh.light ~/.fzf.zsh;
  cp ~/.config/nvim/init.vim.light ~/.config/nvim/init.vim;
  cp ~/.config/bat/config.light ~/.config/bat/config;
  tmux source ~/.tmux.conf.light;
  source ~/.fzf.zsh
"

alias set_dark_theme="
  cp ~/.fzf.zsh.dark ~/.fzf.zsh;
  cp ~/.config/bat/config.dark ~/.config/bat/config;
  cp ~/.config/nvim/init.vim.dark ~/.config/nvim/init.vim;
  tmux source ~/.tmux.conf.dark;
  source ~/.fzf.zsh
"

export NODE_OPTIONS="--max-old-space-size=1536"
